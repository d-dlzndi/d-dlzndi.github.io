@mixin fullWidth {
    min-width: 100%;
    max-width: 95vw;
    position: relative;
    left: 50%;
    transform: translateX(-50%);
}

@mixin notFullWidth {
    min-width: none;
    max-width: 100% !important;
    position: static;
    left: 0;
    transform: none;
}

.prose {
    &,
    * {
        color: inherit;
    }

    p {
        //line-height: 1.1;
        &:has(img:only-child),
        & > span:has(img:only-child) {
            margin: 0;
        }

        &[class~="flex"] > * > img {
            @include notFullWidth();
        }
    }

    img {
        &:not([class~="auto"]):not(p[class~="flex"] > *) {
            // width: 100%;
            @include fullWidth();
        }
        // max-height: 95vh;
        object-fit: contain;
        margin: 0;
        display: inline-block;
    }

    hr {
        border: 0;
        height: 1px;
        opacity: 0.3;
        margin: 6rem auto;
        background: oklch(var(--b1) / 0.3);
        width: 1px;
        height: 8rem;
    }

    li::marker {
        color: oklch(var(--p));
    }

    h1,
    h2 {
        font-size: xx-large;
    }
    h3,
    h4 {
        font-size: x-large;
    }
    h5,
    h6 {
        font-size: large;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        //position: sticky;
        //padding: 1em 0 .5em;
        //background: linear-gradient(to bottom, oklch(var(--bc)) 90%, transparent 100%);
        //top: 0;
        color: inherit;
        font-weight: 900;
        scroll-margin-top: 20vh;

        a[aria-label] {
            position: relative;
            opacity: 0;
            transition: all 0.5s;

            &::before {
                content: "#";
                color: oklch(var(--p));
                font-weight: 100;
                position: absolute;
                right: 0;
                top: 0;
                width: 1.2em;
                height: 1.2em;
                text-align: center;
                display: inline-block;
                vertical-align: middle;
                line-height: 1.3em;
                transition: font-weight 1s ease-out;
                // text-shadow: 0 0 1px oklch(var(--pc));
            }

            &:hover::before {
                transition-duration: 0s;
                font-weight: 900;
            }
        }
        &:hover a[aria-label] {
            opacity: 1;
        }
    }

    table {
        @apply table;
    }

    table :where(thead, tfoot) {
        color: inherit;
    }

    *[class~="flex"] {
        & > * {
            width: 0 !important;
            flex: 1 0 auto !important;
            place-self: stretch;
            object-fit: cover;
        }
    }

    mark {
        color: oklch(var(--sc));
        // text-shadow: 0.08em 0.08em 0 oklch(var(--bc));
        // background: linear-gradient(to top, oklch(var(--p) / 0.5) 20%, transparent 25%);
        background: oklch(var(--s));
        padding: 0.1em 0.3em;
        margin: 0 0.1em;
        font-weight: bolder;
    }

    span {
        border-radius: 0.2em;
    }

    iframe {
        width: 10000%;
        height: auto;
        aspect-ratio: 16 / 9;

        @include fullWidth();
    }

    blockquote {
        display: block !important;
        //background: oklch(var(--s));
        //color: oklch(var(--sc));
        padding: 0.5em 1.5em;
        position: relative;
    }

    & :where(blockquote p:first-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *))::before {
        content: "❝";
        z-index: -1;
        position: absolute;
        top: -0.5em;
        left: -0.1em;
        font-size: 5em;
        opacity: 0.2;
        color: oklch(var(--p));
    }

    & :where(blockquote p:last-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
        content: "❞";
        z-index: -1;
        position: absolute;
        bottom: -0.6em;
        right: 0.2em;
        font-size: 5em;
        opacity: 0.2;
        color: oklch(var(--p));
    }

    strong {
        font-weight: 800 !important;
    }

    code {
        // box-shadow: 0.05em 0.05em 0.4em oklch(var(--s) / 0.3);
        border: 0.15em solid oklch(var(--a) / 0.2);
        border-top: 0;
        border-bottom: 0;
        color: oklch(var(--a));
        position: relative;
        bottom: 0.05em;
        padding: 0.2em 0.4em;
        padding-top: 0.3em;
        border-radius: 0.2em;
        margin: 0 0.1em;
        font-size: 0.9em;

        &::before,
        &::after {
            content: none;
        }
    }
}

$breakpoint-xl: 1280px;
$breakpoint-2xl: 1536px;

@media (min-width: #{$breakpoint-2xl}) {
    .prose {
        img {
            max-width: $breakpoint-2xl !important;
        }

        iframe {
            max-width: $breakpoint-2xl !important;
        }
    }
}
